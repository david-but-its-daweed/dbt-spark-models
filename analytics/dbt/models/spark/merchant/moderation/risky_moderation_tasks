{{ config(
    schema='merchant',
    materialized='view',
    partition_by=['queued_date'],
    file_format='parquet',
    meta = {
      'team': merchant,
      'model_owner': '@abracadabrik',
      'bigquery_load': 'true',
      'bigquery_partitioning_date_column': 'queued_date'
    },
) }}

WITH category_levels AS (

    SELECT
        category_id,
        level_1_category.name AS category_name
    FROM
        mart.category_levels

) , product_categories AS (

    SELECT
        DISTINCT product_id,
        category_id
    FROM (
        SELECT
            product_id,
            category_id,
            effective_ts,
            FIRST(effective_ts) OVER (PARTITION BY product_id ORDER BY effective_ts DESC) AS latest_effective_ts
        FROM
            mart.dim_product
    )
    WHERE
        effective_ts = latest_effective_ts

), queued AS (

    SELECT
        payload.itemId AS item_id,
        product_events.product_id As product_id,
        partition_date AS queued_date,
        event_ts_utc AS queued_ts,
        payload.productType AS productType,
        payload.source AS source,
        payload.origin AS origin,
        category_name
    FROM
        mart.product_events
    LEFT JOIN product_categories ON product_events.product_id = product_categories.product_id
    LEFT JOIN category_levels ON product_categories.category_id = category_levels.category_id
    WHERE
        type = "riskyModerationQueued"

), canceled AS (

    SELECT
        payload.itemId AS item_id,
        product_id,
        partition_date AS canceled_date,
        event_ts_utc AS canceled_ts
    FROM
        mart.product_events
    WHERE
        type = "riskyModerationCanceled"

), processed AS (

    SELECT
        payload.itemId AS item_id,
        product_id,
        event_ts_utc AS processed_ts,
        payload.rejectReasons AS reject_reasons
    FROM
        mart.product_events
    WHERE
        type = "riskyModerationResult"

)

SELECT
    queued.item_id AS item_id,
    queued.product_id AS product_id,
    source,
    category_name,
    queued_date,
    queued_ts,
    canceled_ts,
    processed_ts,
    CASE
        WHEN canceled_ts IS NOT NULL THEN "—Åancelled"
        WHEN processed_ts IS NOT NULL AND reject_reasons IS NOT NULL THEN "rejected"
        WHEN processed_ts IS NOT NULL AND reject_reasons IS NULL THEN "approved"
        ELSE "queued"
    END AS processed_type,
    CASE
        WHEN canceled_ts IS NOT NULL THEN (unix_timestamp(canceled_ts) - unix_timestamp(queued_ts)) / 3600
        WHEN processed_ts IS NOT NULL THEN (unix_timestamp(processed_ts) - unix_timestamp(queued_ts)) / 3600
        ELSE NULL
    END AS processed_time,
    CASE
        WHEN canceled_ts IS NOT NULL THEN DATE(canceled_ts)
        WHEN processed_ts IS NOT NULL THEN DATE(processed_ts)
        ELSE CURRENT_DATE() - 1
    END AS latest_date,
    moderator_id,
    reject_reasons,
    reject_reasons[0]["code"] AS reject_reason
FROM queued
LEFT JOIN canceled ON queued.item_id = canceled.item_id
LEFT JOIN processed ON queued.item_id = processed.item_id